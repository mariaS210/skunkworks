{"version":3,"sources":["utils/ApiEndpoints.js","components/item/CommentComponent.jsx","components/item/UpvoteComponent.jsx","components/item/SummaryComponent.jsx","components/item/ItemComponent.jsx","components/list/ItemListComponent.jsx","components/list/TopStoriesComponent.jsx","components/list/BestStoriesComponent.jsx","components/list/NewStoriesComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","cursor","newsItems","ApiEndpoints","itemId","callback","request","Request","concat","fetch","then","response","status","json","Error","catch","error","console","endpoint","arguments","length","undefined","forceMakeRequest","result","slice","items","requests","forEach","push","Promise","all","map","responses","CommentComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateComments","newComments","setState","comments","state","item","kids","getBulkNewsItems","react_default","a","createElement","ListGroup","variant","comment","deleted","Item","key","id","input","text","DOMParser","parseFromString","documentElement","textContent","React","Component","UpvoteComponent","className","onClick","upvoteAction","index_es","icon","SummaryComponent","changeShowComments","oldShowComments","showComments","_this2","author","by","points","score","time","postDate","Date","timeDiff","Math","abs","now","timeUnit","shouldRenderComments","openedStory","item_UpvoteComponent","floor","changeOpenedStory","item_CommentComponent","ItemComponent","buildScore","localScore","parseURL","itemLink","url","document","setAttribute","index","searchTerm","getNewsItem","itemTitle","title","term","toLowerCase","includes","Card","border","Body","Title","href","hostname","Text","item_SummaryComponent","ItemListComponent","loadItems","getNewsItems","storyId","oldStoryId","isLoading","lib_default","dataLength","next","hasMore","loader","endMessage","style","textAlign","item_ItemComponent","TopStoriesComponent","list_ItemListComponent","BestStoriesComponent","NewStoriesComponent","library","add","faFilter","faThumbsUp","fab","App","event","target","value","react_router_dom","Navbar","bg","expand","sticky","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","Form","inline","InputGroup","Button","Prepend","FormControl","type","placeholder","onChange","handleChange","bind","aria-describedby","react_router","exact","path","render","list_TopStoriesComponent","assign","list_NewStoriesComponent","list_BestStoriesComponent","component","Boolean","window","location","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wXAAMA,EAAW,qCACbC,EAAS,EAETC,EAAY,GA4DDC,2GAzDQC,EAAQC,GACvB,IAAIC,EAAU,IAAIC,QAAJ,GAAAC,OAAeR,EAAf,aAAAQ,OAAmCJ,EAAnC,UACdK,MAAMH,GACDI,KAAK,SAAAC,GACF,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,yCAGvBJ,KAAK,SAAAC,GACFN,GAAYA,EAASM,KACtBI,MAAM,SAAAC,GACLC,QAAQD,MAAMA,0CAINX,GAAyD,IAA/Ca,EAA+CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,aAAcG,EAAwBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACzE,GAAIjB,EAAUkB,OAAS,IAAME,EAAkB,CAC3CrB,GAvBO,GAwBP,IAAIsB,EAASrB,EAAUsB,MAAM,EAAGvB,GAChC,OAAOI,EAASkB,GAEpB,IAAIjB,EAAU,IAAIC,QAAJ,GAAAC,OAAeR,EAAf,QAAAQ,OAA8BU,EAA9B,UACdT,MAAMH,GACDI,KAAK,SAAAC,GACF,GAAwB,MAApBA,EAASC,OACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,yCAGvBJ,KAAK,SAAAC,GACFT,EAAYS,EACZV,GAtCG,GAuCH,IAAIsB,EAASZ,EAASa,MAAM,EAAGvB,GAC/BI,GAAYA,EAASkB,KACtBR,MAAM,SAAAC,GACLC,QAAQD,MAAMA,8CAIFS,EAAOpB,GAC3B,IAAIqB,EAAW,GACXD,GAASpB,IACToB,EAAME,QAAQ,SAAAvB,GACVsB,EAASE,KAAK,IAAIrB,QAAJ,GAAAC,OAAeR,EAAf,aAAAQ,OAAmCJ,EAAnC,aAElByB,QAAQC,IAAIJ,EAASK,IAAI,SAAAzB,GAAO,OAC5BG,MAAMH,GAASI,KAAK,SAAAC,GAAQ,OAAIA,EAASE,YAC1CH,KAAK,SAAAsB,GACJ3B,EAAS2B,mCCEVC,cA7CX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,eAAiB,SAACC,GACdR,EAAKS,SAAS,CACVC,SAAUF,KAPdR,EAAKW,MAAQ,CACTD,SAAU,IAHCV,mFAcf,IAAIY,EAAOT,KAAKJ,MAAMa,KAClBC,EAAOD,GAAQA,EAAKC,KACxB7C,EAAa8C,iBAAiBD,EAAMV,KAAKI,iDAIzC,IAAIG,EAAWP,KAAKQ,MAAMD,SAE1B,OAAIA,EAASzB,OAAS,EAEd8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,QAAQ,SAAnB,WAEKT,EAASd,IAAI,SAASwB,GACnB,OAAKA,EAAQC,QAMFN,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBALJF,EAAAC,EAAAC,cAACC,EAAA,EAAUI,KAAX,KACAP,EAAAC,EAAAC,cAAA,KAAGM,IAAKH,EAAQI,KArChCC,EAqCgDL,EAAQM,MAnC9D,IAAIC,WAAYC,gBAAgBH,EAAO,aACtCI,gBAAgBC,cAmCKf,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,SAAKG,EAAQP,MAAQO,EAAQP,KAAK5B,QAAW,EAA7C,eAtCvC,IAAoBwC,KA+CDV,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,8BAzCOc,IAAMC,WCGtBC,mLARP,OACIlB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,0BAA0BC,QAAShC,KAAKJ,MAAMqC,cACzDrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAiBC,KAAK,sBALRP,IAAMC,WC6CrBO,cA3CX,SAAAA,EAAYxC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACjBvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KAMRyC,mBAAqB,WACjB,IAAIC,EAAkBzC,EAAKW,MAAM+B,aACjC1C,EAAKS,SAAS,CACZiC,cAAeD,KARnBzC,EAAKW,MAAQ,CACX+B,cAAc,GAHC1C,wEAcV,IAAA2C,EAAAxC,KACP,GAAIA,KAAKJ,OAASI,KAAKJ,MAAMa,KAAM,CACjC,IAAIgC,EAASzC,KAAKJ,MAAMa,KAAKiC,GACzBC,EAAS,IAAM3C,KAAKJ,MAAMgD,MAC1BC,EAAO7C,KAAKJ,MAAMa,KAAKoC,KACvBtC,EAAWP,KAAKJ,MAAMa,KAAKC,KAAOV,KAAKJ,MAAMa,KAAKC,KAAK5B,OAAS,EAChEgE,EAAW,IAAIC,KAAY,IAAPF,GACpBG,EAAWC,KAAKC,IAAIH,KAAKI,MAAQL,GAAY,KAC7CM,EAAW,QACXJ,EAAW,KACbI,EAAW,OACXJ,GAAW,IAEb,IAAIK,EAAwBrD,KAAKJ,MAAM0D,cAAgBtD,KAAKJ,MAAMa,KAAKY,GAEtE,OAAQT,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAACyC,EAAD,CAAiBtB,aAAcjC,KAAKJ,MAAMqC,eACzCU,EAFM,cAEaF,EAFb,KAGNQ,KAAKO,MAAMR,GAHL,IAGiBI,EAHjB,SAIPxC,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,UAAUC,QAAS,WACjCQ,EAAK5C,MAAM6D,kBAAkBjB,EAAK5C,MAAMa,KAAKY,MAAQd,EADvD,aAEC8C,GAAwBzC,EAAAC,EAAAC,cAAC4C,EAAD,CAAkBtC,IAAKpB,KAAKJ,MAAMa,KAAKY,GAAIZ,KAAMT,KAAKJ,MAAMa,QAGvF,OAAOG,EAAAC,EAAAC,cAAA,wCAvCgBc,IAAMC,WCoFtB8B,cAhFX,SAAAA,EAAY/D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACd9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMJ,KASVqC,aAAe,WACX,IAAIW,EAAQ/C,EAAKW,OAASX,EAAKW,MAAMoC,MACrC/C,EAAKS,SAAS,CACVsC,MAAOA,EAAQ,KAbL/C,EA0BlB+D,WAAa,WACT,IAAIC,EAAahE,EAAKW,OAASX,EAAKW,MAAMoC,MAG1C,OAFgB/C,EAAKW,MAAMC,MAAQZ,EAAKW,MAAMC,KAAKmC,OAC3BiB,GA7BVhE,EAiClBiE,SAAW,SAACC,GAER,IAAIC,EAAMC,SAASnD,cAAc,KAGjC,OADAkD,EAAIE,aAAa,OAAQH,GAClBC,GApCPnE,EAAKW,MAAQ,CACTC,KAAM,KACN0D,MAAOtE,EAAKD,MAAMuE,MAClBvB,MAAO,EACPwB,WAAYvE,EAAKD,MAAMwE,YANbvE,mFAiBE,IAAA2C,EAAAxC,KAChBnC,EAAawG,YACTrE,KAAKJ,MAAM9B,OACX,SAAAO,GAAQ,OAAImE,EAAKlC,SAAS,CAClBG,KAAMpC,uCAqBlB,IAAIoC,EAAOT,KAAKQ,MAAMC,KAClB6D,EAAY,KAAO7D,GAAQA,EAAK8D,OAChCR,EAAYtD,GAAQA,EAAKuD,IACzBpB,EAAQ5C,KAAK4D,aAEbI,EAAMhE,KAAK8D,SAASC,GACpBS,EAAOxE,KAAKJ,MAAMwE,YAAcpE,KAAKJ,MAAMwE,WAAWK,cAM1D,OALqBD,IACjBF,EAAUG,cAAcC,SAASF,KAChC,GAAKT,GAAUU,cAAcC,SAASF,KACrC/D,GAAQA,EAAKgC,QAAW,IAAIgC,cAAcC,SAASF,MAClDA,EAMC5D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,OAAO,SACThE,EAAAC,EAAAC,cAAC6D,EAAA,EAAKE,KAAN,KACIjE,EAAAC,EAAAC,cAAC6D,EAAA,EAAKG,MAAN,KAAYlE,EAAAC,EAAAC,cAAA,KAAGiE,KAAMhB,GAAWO,GAAhC,KAAiDN,EAAIgB,SAArD,KACApE,EAAAC,EAAAC,cAAC6D,EAAA,EAAKM,KAAN,KAEArE,EAAAC,EAAAC,cAACoE,EAAD,CAAkBzE,KAAMA,EACNmC,MAAOA,EACPa,kBAAmBzD,KAAKJ,MAAM6D,kBAC9BH,YAAatD,KAAKJ,MAAM0D,YACxBrB,aAAcjC,KAAKiC,kBAI7CrB,EAAAC,EAAAC,cAAA,YAlBA,YAxDQc,IAAMC,WCqEnBsD,cApEX,SAAAA,EAAYvF,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmF,IACdtF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqF,GAAAhF,KAAAH,KAAMJ,KAaVwF,UAAY,WACR,IAAIxG,EAAYiB,EAAKW,OAASX,EAAKW,MAAM5B,UAAa,cAEtDf,EAAawH,aAAa,SAAAhH,GAAQ,OAAIwB,EAAKS,SAAS,CAChDnB,MAAOd,KACPO,GAHmB,IAhBTiB,EAuBlB4D,kBAAoB,SAAC6B,GACjB,IAAIC,EAAa1F,EAAKW,MAAM8C,YACvBgC,GAAWC,IAAeD,EAM/BzF,EAAKS,SAAS,CACVgD,YAAagC,IANbzF,EAAKS,SAAS,CACVgD,YAAa,KAzBrBzD,EAAKW,MAAQ,CACT5B,SAAUiB,EAAKD,MAAMhB,SACrBO,MAAO,KACPqG,WAAW,EACXlC,YAAa,GANHzD,mFAWdG,KAAKoF,6CAyBA,IAAA5C,EAAAxC,KACDpC,EAAYoC,KAAKQ,MAAMrB,MAK3B,OAJKvB,IACDA,EAAY,IAIZgD,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aACXnB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CACI6E,WAAY9H,EAAUkB,OACtB6G,KAAM3F,KAAKoF,UACXQ,SAAS,EACTC,OAAQjF,EAAAC,EAAAC,cAAA,wBACRgF,WACIlF,EAAAC,EAAAC,cAAA,KAAGiF,MAAO,CAAEC,UAAW,WACnBpF,EAAAC,EAAAC,cAAA,wCAGPlD,EAAU6B,IAAI,SAACgB,EAAM0D,GAAP,OACXvD,EAAAC,EAAAC,cAACmF,EAAD,CAAe7E,IAAK+C,EAChBA,MAAOA,EACPrG,OAAQ2C,EACR2D,WAAY5B,EAAK5C,MAAMwE,WACvBX,kBAAmBjB,EAAKiB,kBACxBH,YAAad,EAAKhC,MAAM8C,yBA7DpB1B,IAAMC,WCEvBqE,mLAJP,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,CAAmBvH,SAAS,aAAawF,WAAYpE,KAAKJ,MAAMwE,oBAF7CxC,IAAMC,WCKzBuE,mLAHP,OAAOxF,EAAAC,EAAAC,cAACqF,EAAD,CAAmBvH,SAAS,cAAewF,WAAYpE,KAAKJ,MAAMwE,oBAF9CxC,IAAMC,WCK1BwE,mLAHP,OAAOzF,EAAAC,EAAAC,cAACqF,EAAD,CAAmBvH,SAAS,aAAawF,WAAYpE,KAAKJ,MAAMwE,oBAF7CxC,IAAMC,WCwBxCyE,IAAQC,IAAIC,IAAUC,IAAYC,SAwDnBC,cAnDb,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,KAAMJ,KACDY,MAAQ,CACXgE,KAAM,GACN5F,SAAU,cAJKiB,4EAQN+G,GACX5G,KAAKM,SAAS,CAACkE,KAAMoC,EAAMC,OAAOC,yCAG3B,IAAAtE,EAAAxC,KACP,OACEY,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAQhF,UAAU,OAChBnB,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKC,OAAO,OACtCvG,EAAAC,EAAAC,cAACkG,EAAA,EAAOI,MAAR,CAAcC,GAAIC,IAAMC,GAAG,OAAOxF,UAAU,2BAC1CnB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,wBADjC,gBAGAvB,EAAAC,EAAAC,cAACkG,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B7G,EAAAC,EAAAC,cAACkG,EAAA,EAAOU,SAAR,CAAiBrG,GAAG,oBAClBT,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAK5F,UAAU,WACbnB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMQ,GAAG,OAAOvF,QAAS,WAAOQ,EAAKlC,SAAS,CAAC1B,SAAU,gBAAiBmD,UAAU,YAApF,OACAnB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMQ,GAAG,OAAOvF,QAAS,WAAOQ,EAAKlC,SAAS,CAAC1B,SAAU,gBAAiBmD,UAAU,YAApF,OACAnB,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAMQ,GAAG,QAAQvF,QAAS,WAAOQ,EAAKlC,SAAS,CAAC1B,SAAU,iBAAkBmD,UAAU,YAAtF,SAEFnB,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAMC,QAAM,GACZjH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAY/F,UAAU,WACpBnB,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAQV,GAAIS,IAAWE,QAAShH,QAAQ,WAAUJ,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAiBC,KAAK,YACxEvB,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACEC,KAAK,OACLC,YAAY,SACZrB,MAAO9G,KAAKQ,MAAMgE,KAClB4D,SAAUpI,KAAKqI,aAAaC,KAAKtI,MACjCuI,mBAAiB,eAMrB3H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,KACE5H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAQC,OAAQ,SAAC/I,GAAD,OAAWgB,EAAAC,EAAAC,cAAC8H,EAAD9I,OAAA+I,OAAA,GAAyBjJ,EAAzB,CAAgCwE,WAAY5B,EAAKhC,MAAMgE,WACpG5D,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAQC,OAAQ,SAAC/I,GAAD,OAAWgB,EAAAC,EAAAC,cAACgI,EAADhJ,OAAA+I,OAAA,GAAyBjJ,EAAzB,CAAgCwE,WAAY5B,EAAKhC,MAAMgE,WACpG5D,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQ,SAAC/I,GAAD,OAAWgB,EAAAC,EAAAC,cAACiI,EAADjJ,OAAA+I,OAAA,GAA0BjJ,EAA1B,CAAiCwE,WAAY5B,EAAKhC,MAAMgE,WACrG5D,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIM,UAAW9C,aA9C3BtE,IAAMC,WCnBJoH,QACW,cAA7BC,OAAOC,SAASnE,UAEe,UAA7BkE,OAAOC,SAASnE,UAEhBkE,OAAOC,SAASnE,SAASoE,MACvB,iECPNC,IAASV,OAAO/H,EAAAC,EAAAC,cAACwI,EAAD,MAASrF,SAASsF,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtL,KAAK,SAAAuL,GACjCA,EAAaC","file":"static/js/main.bbc61e91.chunk.js","sourcesContent":["const BASE_URL = \"https://hacker-news.firebaseio.com\";\nlet cursor = 0;\nlet limitCounter = 30;\nlet newsItems = []\n\nclass ApiEndpoints {\n    static getNewsItem(itemId, callback) {\n        let request = new Request(`${BASE_URL}/v0/item/${itemId}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                callback && callback(response);\n            }).catch(error => {\n                console.error(error);\n            });\n    }\n\n    static getNewsItems(callback, endpoint=\"topstories\", forceMakeRequest=false) {\n        if (newsItems.length > 0 && !forceMakeRequest) {\n            cursor = cursor + limitCounter;\n            let result = newsItems.slice(0, cursor);\n            return callback(result);\n        }\n        let request = new Request(`${BASE_URL}/v0/${endpoint}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                newsItems = response;\n                cursor = cursor + limitCounter;\n                let result = response.slice(0, cursor);\n                callback && callback(result);\n            }).catch(error => {\n                console.error(error);\n            });\n        }\n\n    static getBulkNewsItems(items, callback) {\n        let requests = []\n        if (items && callback) {\n            items.forEach(itemId => {\n                requests.push(new Request(`${BASE_URL}/v0/item/${itemId}.json`));\n            });\n            Promise.all(requests.map(request =>\n                fetch(request).then(response => response.json())\n            )).then(responses => {\n                callback(responses);\n            });\n        }\n    }\n}\n\nexport default ApiEndpoints;","import React from 'react';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\nfunction htmlDecode(input)\n{\n    var doc = new DOMParser().parseFromString(input, \"text/html\");\n    return doc.documentElement.textContent;\n}\n\nclass CommentComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: []\n        }\n    }\n\n    updateComments = (newComments) => {\n        this.setState({\n            comments: newComments\n        });\n    }\n\n    componentDidMount() {\n        let item = this.props.item;\n        let kids = item && item.kids;\n        ApiEndpoints.getBulkNewsItems(kids, this.updateComments);\n    }\n\n    render() {\n        let comments = this.state.comments;\n        let index = 1;\n        if (comments.length > 0) {\n            return (\n                <ListGroup variant=\"flush\">\n                    Comments\n                    {comments.map(function(comment) {\n                        if (!comment.deleted) {\n                            return (<ListGroup.Item>\n                                    <p key={comment.id}>{htmlDecode(comment.text)}</p>\n                                    <p><i>{(comment.kids && comment.kids.length) || 0} children</i></p>\n                                </ListGroup.Item>);\n                        } else {\n                            return <div><i>Deleted.</i></div>\n                        }\n                    })}\n                </ListGroup>\n            );\n        } else {\n            return <div><i>Stand by.</i></div>;\n        }\n    }\n\n}\n\nexport default CommentComponent;","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass UpvoteComponent extends React.Component {\n\n    render() {\n        return (\n            <div className=\"btn btn-outline-success\" onClick={this.props.upvoteAction}>\n                <FontAwesomeIcon icon=\"thumbs-up\" />\n            </div>\n        )\n    }\n}\n\nexport default UpvoteComponent;","import React from 'react';\nimport CommentComponent from './CommentComponent';\nimport UpvoteComponent from './UpvoteComponent'\n\n\nclass SummaryComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        showComments: false\n      };\n    }\n\n    changeShowComments = () => {\n        let oldShowComments = this.state.showComments;\n        this.setState({\n          showComments: !oldShowComments \n        });\n    }\n\n    render() {\n      if (this.props && this.props.item) {\n        let author = this.props.item.by;\n        let points = \" \" + this.props.score;\n        let time = this.props.item.time;\n        let comments = this.props.item.kids ? this.props.item.kids.length : 0;\n        let postDate = new Date(time * 1000);\n        let timeDiff = Math.abs(Date.now() - postDate) / 36e5; // in hours\n        let timeUnit = \"hours\"\n        if (timeDiff > 24) {\n          timeUnit = \"days\";\n          timeDiff /=24;\n        }\n        let shouldRenderComments = (this.props.openedStory === this.props.item.id)//this.state.showComments;\n\n         return (<div>\n          <UpvoteComponent upvoteAction={this.props.upvoteAction}/>\n          {points} points by {author} |\n          {Math.floor(timeDiff)} {timeUnit} ago |\n          <span className=\"Comment\" onClick={() => {\n            this.props.changeOpenedStory(this.props.item.id);}}>{comments} comments</span>\n          {shouldRenderComments && <CommentComponent key={this.props.item.id} item={this.props.item}/>}\n         </div>);\n      } else {\n        return <div>No data available.</div>\n      }\n    }\n}\n\nexport default SummaryComponent;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nimport SummaryComponent from './SummaryComponent';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\n\nclass ItemComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            index: this.props.index,\n            score: 0,\n            searchTerm: this.props.searchTerm,\n        };\n    }\n\n    upvoteAction = () => {\n        let score = this.state && this.state.score;\n        this.setState({\n            score: score + 1\n        });\n    }\n\n    componentDidMount() {\n        ApiEndpoints.getNewsItem(\n            this.props.itemId,\n            response => this.setState({\n                    item: response\n                })\n        );\n    }\n\n    buildScore = () => {\n        let localScore = this.state && this.state.score;\n        let hckrScore = this.state.item && this.state.item.score;\n        let score = hckrScore + localScore;\n        return score;\n    }\n\n    parseURL = (itemLink) => {\n        //  Create an anchor element (note: no need to append this element to the document)\n        let url = document.createElement('a');\n        //  Set href to any path\n        url.setAttribute('href', itemLink);\n        return url;\n    }\n\n    render() {\n        let item = this.state.item;\n        let itemTitle = \" \" + (item && item.title);\n        let itemLink = (item && item.url);\n        let score = this.buildScore();\n        \n        let url = this.parseURL(itemLink);\n        let term = this.props.searchTerm && this.props.searchTerm.toLowerCase()\n        let shouldDisplay = (term && (\n            itemTitle.toLowerCase().includes(term) ||\n            (\"\" + itemLink).toLowerCase().includes(term) ||\n            ((item && item.author) || \"\").toLowerCase().includes(term)\n        )) || !term;\n        if (!shouldDisplay) {\n            return (null);\n        }\n        else {\n            return (\n                <div>\n                    <Card border=\"light\">\n                        <Card.Body>\n                            <Card.Title><a href={itemLink}>{itemTitle}</a> ({url.hostname})</Card.Title>\n                            <Card.Text>\n                            \n                            <SummaryComponent item={item}\n                                              score={score}\n                                              changeOpenedStory={this.props.changeOpenedStory}\n                                              openedStory={this.props.openedStory}\n                                              upvoteAction={this.upvoteAction}/>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                    <br/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ItemComponent;","import React from 'react';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\nimport ItemComponent from '../item/ItemComponent';\n\n\nclass ItemListComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            endpoint: this.props.endpoint,\n            items: null,\n            isLoading: false,\n            openedStory: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.loadItems();\n    }\n\n    loadItems = () => {\n        let endpoint = (this.state && this.state.endpoint) || \"beststories\";\n        let forceMakeRequest = true;\n        ApiEndpoints.getNewsItems(response => this.setState({\n            items: response\n        }), endpoint, forceMakeRequest\n        );\n    }\n\n    changeOpenedStory = (storyId) => {\n        let oldStoryId = this.state.openedStory;\n        if (!storyId || oldStoryId === storyId) {\n            this.setState({\n                openedStory: 0\n            }); // just close opened story\n            return\n        }\n        this.setState({\n            openedStory: storyId // new story opened\n        });\n    }\n\n    render() {\n        let newsItems = this.state.items;\n        if (!newsItems) {\n            newsItems = [];\n        }\n\n        return (\n            <div className=\"container\">\n                <InfiniteScroll\n                    dataLength={newsItems.length} //This is important field to render the next data\n                    next={this.loadItems}\n                    hasMore={true}\n                    loader={<h4>Loading...</h4>}\n                    endMessage={\n                        <p style={{ textAlign: 'center' }}>\n                            <b>Yay! You have seen it all</b>\n                        </p>\n                    }>\n                    {newsItems.map((item, index) => (\n                        <ItemComponent key={index}\n                            index={index}\n                            itemId={item}\n                            searchTerm={this.props.searchTerm}\n                            changeOpenedStory={this.changeOpenedStory}\n                            openedStory={this.state.openedStory} />\n                    ))}\n                </InfiniteScroll>\n            </div>\n        )\n    }\n}\n\nexport default ItemListComponent;\n","import React from 'react';\nimport ItemListComponent from './ItemListComponent';\n\n\nclass TopStoriesComponent extends React.Component {\n    render() {\n        return <ItemListComponent endpoint=\"topstories\" searchTerm={this.props.searchTerm}/>;\n    }\n}\n\nexport default TopStoriesComponent;","import React from 'react';\nimport ItemListComponent from './ItemListComponent';\n\n\nclass BestStoriesComponent extends React.Component {\n    render() {\n        return <ItemListComponent endpoint=\"beststories\"  searchTerm={this.props.searchTerm} />\n    }\n}\nexport default BestStoriesComponent;","import React from 'react';\nimport ItemListComponent from './ItemListComponent';\n\n\nclass NewStoriesComponent extends React.Component {\n    render() {\n        return <ItemListComponent endpoint=\"newstories\" searchTerm={this.props.searchTerm} />;\n    }\n}\nexport default NewStoriesComponent;","import React from 'react';\n\n// React Bootrap Navigation bar\n// order matters.\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport './App.css';\nimport TopStoriesComponent from './components/list/TopStoriesComponent';\nimport BestStoriesComponent from './components/list/BestStoriesComponent';\nimport NewStoriesComponent from './components/list/NewStoriesComponent';\n\nlibrary.add(faFilter, faThumbsUp, fab);\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      endpoint: \"topstories\",\n    }\n  }\n\n  handleChange(event) {\n    this.setState({term: event.target.value})\n  }\n\n  render() {\n    return (\n      <Router className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand as={Link} to=\"/top\" className=\"btn btn-outline-warning\">\n          <FontAwesomeIcon icon={[\"fab\", \"hacker-news-square\"]}/> Hacker News\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/top\" onClick={() => {this.setState({endpoint: \"topstories\"})}} className=\"nav-link\">Top</Link>\n            <Link to=\"/new\" onClick={() => {this.setState({endpoint: \"newstories\"})}} className=\"nav-link\">New</Link>\n            <Link to=\"/best\" onClick={() => {this.setState({endpoint: \"beststories\"})}} className=\"nav-link\">Best</Link>\n          </Nav>\n          <Form inline>\n          <InputGroup className=\"mr-sm-2\">\n            <Button as={InputGroup.Prepend} variant=\"primary\"><FontAwesomeIcon icon=\"filter\" /></Button>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Filter\"              \n              value={this.state.term}\n              onChange={this.handleChange.bind(this)}\n              aria-describedby=\"filter\"\n            ></FormControl>\n          </InputGroup>\n          </Form>\n        </Navbar.Collapse>\n        </Navbar>\n          <Switch>\n            <Route exact path=\"/top\"  render={(props) => <TopStoriesComponent {...props} searchTerm={this.state.term} />} />\n            <Route exact path=\"/new\"  render={(props) => <NewStoriesComponent {...props} searchTerm={this.state.term} />} />\n            <Route exact path=\"/best\" render={(props) => <BestStoriesComponent {...props} searchTerm={this.state.term} />} />\n            <Route exact path=\"/\" component={TopStoriesComponent} />\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
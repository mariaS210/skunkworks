{"version":3,"sources":["utils/ApiEndpoints.js","components/list/CommentListComponent.jsx","components/item/SummaryComponent.jsx","components/item/ItemComponent.jsx","components/list/ItemListComponent.jsx","components/list/BookmarkListComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","cursor","newsItems","ApiEndpoints","itemId","callback","request","Request","fetch","then","response","status","json","Error","catch","error","console","endpoint","forceMakeRequest","length","result","slice","items","requests","forEach","push","Promise","all","map","responses","indexStart","indexEnd","results","part","concat","CommentListComponent","props","_isMounted","_sliceLength","updateExpanded","oldExpanded","state","expanded","setState","replies","fetchNextReplies","startIndex","endIndex","getBulkNewsItemsPaginated","kids","updateReplies","newReplies","fetchFirstReplies","checkMore","this","className","depth","icon","hideReplies","onClick","ListGroup","variant","dataLength","next","hasMore","loader","Spinner","animation","size","endMessage","comment","deleted","key","id","Item","dangerouslySetInnerHTML","__html","unescape","text","React","Component","SummaryComponent","changeShowComments","oldShowComments","showComments","computeTimeString","time","postDate","Date","timeDiff","Math","abs","now","timeUnit","timeNumber","floor","computeIcon","item","type","title","startsWith","points","score","comments","shouldRenderComments","openedStory","url","bookmarkAction","disabled","by","changeOpenedStory","ItemComponent","parseURL","itemLink","document","createElement","setAttribute","index","searchTerm","getNewsItem","itemTitle","hostname","term","toLowerCase","includes","author","href","Card","border","body","ItemListComponent","loadItems","getNewsItems","storyId","oldStoryId","isLoading","bookmarks","version","require","Navbar","fixed","bg","style","textAlign","BookmarkListComponent","shown","Array","fill","splice","position","top","right","Toast","show","onClose","handleClose","Header","library","add","faFilter","faBookmark","faAngleDown","faAngleUp","faSuitcase","faEye","faQuestion","faLink","fab","App","find","saved","event","target","value","expand","sticky","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Form","inline","InputGroup","Button","Prepend","FormControl","placeholder","onChange","handleChange","bind","aria-describedby","exact","path","render","Boolean","window","location","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bb5a05f.chunk.js","sourcesContent":["const BASE_URL = \"https://hacker-news.firebaseio.com\";\nlet cursor = 0;\nlet limitCounter = 30;\nlet newsItems = []\n\n\nclass ApiEndpoints {\n    static getNewsItem(itemId, callback) {\n        let request = new Request(`${BASE_URL}/v0/item/${itemId}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                callback && callback(response);\n            }).catch(error => {\n                console.error(error);\n            });\n    }\n\n    static getNewsItems(callback, endpoint=\"topstories\", forceMakeRequest=false) {\n        if (newsItems.length > 0 && !forceMakeRequest) {\n            cursor = cursor + limitCounter;\n            let result = newsItems.slice(0, cursor);\n            return callback(result);\n        }\n        let request = new Request(`${BASE_URL}/v0/${endpoint}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                newsItems = response;\n                cursor = cursor + limitCounter;\n                let result = response.slice(0, cursor);\n                callback && callback(result);\n            }).catch(error => {\n                console.error(error);\n            });\n        }\n\n    static getBulkNewsItems(items, callback) {\n        let requests = []\n        if (items && callback) {\n            items.forEach(itemId => {\n                requests.push(new Request(`${BASE_URL}/v0/item/${itemId}.json`));\n            });\n            Promise.all(requests.map(request =>\n                fetch(request).then(response => response.json())\n            )).then(responses => {\n                callback(responses);\n            });\n        }\n    }\n\n    static getBulkNewsItemsPaginated(items, indexStart, indexEnd, results, callback, forceMakeRequest=false) {\n        let requests = []\n        let part = items.slice(indexStart, indexEnd);\n        if (!part) {\n            return results\n        }\n        if (callback) {\n            part.forEach(itemId => {\n                requests.push(new Request(`${BASE_URL}/v0/item/${itemId}.json`));\n            });\n            Promise.all(requests.map(request =>\n                fetch(request).then(response => response.json())\n            )).then(responses => {\n                callback(results.concat(responses));\n            });\n        }\n    }\n}\n\nexport default ApiEndpoints;","import React from 'react';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\nconst MAX_COMMENT_DEPTH = 5;\n\nclass CommentListComponent extends React.Component {\n    _isMounted = false;\n    _sliceLength = 5;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: this.props.expanded,\n            replies: []\n        }\n    }\n\n    updateExpanded = () => {\n        let oldExpanded = this.state.expanded;\n        if (this._isMounted) {\n            this.setState({\n                expanded: !oldExpanded,\n                replies: !oldExpanded ? this.state.replies : []\n            });\n        }\n    }\n\n    fetchNextReplies = () => {\n        let startIndex = this.state.replies.length;\n        let endIndex = startIndex + this._sliceLength;\n        ApiEndpoints.getBulkNewsItemsPaginated(\n            this.props.kids,\n            startIndex, endIndex,\n            this.state.replies,\n            response => this.setState({\n                replies: response\n            })\n        );\n    }\n\n    updateReplies = (newReplies) => {\n        if (this._isMounted) {\n            this.setState({\n                replies: newReplies\n            })\n        }\n    }\n\n    fetchFirstReplies = () => {\n        let initialReplies = []\n        ApiEndpoints.getBulkNewsItemsPaginated(\n            this.props.kids,\n            0, this._sliceLength,\n            initialReplies,\n            this.updateReplies\n        );\n    }\n\n    checkMore = () => {\n        return this.state.replies.length < this.props.kids.length;\n    }\n    \n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        // quick no displays\n        // 1. no replies\n        let haveReplies = !!(this.props.kids && this.props.kids.length);\n        if (!haveReplies) {\n            return <div className=\"Comment\"><i>no replies</i></div>\n        }\n        // 2. maximum depth reached\n        let depth = (this.props.depth || 0) + 1;\n        if (depth > MAX_COMMENT_DEPTH) {\n            return <div className=\"Comment\"><i>Continue this thread...</i></div>\n        }\n\n        let expanded = this.state.expanded;\n        let icon = expanded ? \"angle-up\" : \"angle-down\";\n        let replies = this.state.replies;\n        return (\n            <div>\n            {!this.props.hideReplies && <i className=\"Comment\" onClick={()=>{this.updateExpanded()}}>\n                <FontAwesomeIcon icon={icon} />\n                {this.props.kids.length} replies\n            </i>}\n            {expanded && this.fetchFirstReplies()}\n            {expanded && <ListGroup variant=\"flush\">\n                    <InfiniteScroll\n                        dataLength={replies.length}\n                        next={this.fetchNextReplies}\n                        hasMore={this.checkMore}\n                        loader={<Spinner animation=\"border\"\n                                         variant=\"secondary\"\n                                         size=\"sm\" />}\n                        endMessage={<p>-</p>}>\n                    {replies.map((comment) => {\n                        if (!comment.deleted) {\n                            return (<ListGroup.Item key={\"itm-\" + comment.id}>\n                                    <div key={comment.id} dangerouslySetInnerHTML={{ __html: unescape(comment.text)}}/>\n                                    <CommentListComponent kids={comment.kids} depth={depth}/>\n                                </ListGroup.Item>);\n                        } else {\n                            return <div key={comment.id}><i>Deleted.</i></div>\n                        }\n                    })}\n                    </InfiniteScroll>\n                </ListGroup>\n            }\n            </div>\n        );\n    }\n}\nexport default CommentListComponent;","import React from 'react';\nimport CommentListComponent from '../list/CommentListComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ROOT_DEPTH = 0;\n\n\nclass SummaryComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        showComments: false\n      };\n    }\n\n    changeShowComments = () => {\n        let oldShowComments = this.state.showComments;\n        this.setState({\n          showComments: !oldShowComments \n        });\n    }\n\n    computeTimeString = (time) => {\n      let postDate = new Date(time * 1000);\n      let timeDiff = Math.abs(Date.now() - postDate) / 36e5; // in hours\n      let timeUnit = \"hours\";\n      if (timeDiff > 24) {\n        timeUnit = \"days\";\n        timeDiff /=24;\n      }\n      let timeNumber = Math.floor(timeDiff);\n      return ` ${timeNumber} ${timeUnit} ago`;\n    }\n\n    computeIcon = (item) => {\n      let icon = item.type === \"job\" ? \"suitcase\" : \"link\";\n      if (item.type === \"story\") {\n        if (item.title.startsWith(\"Ask HN: \")) {\n          icon = \"question\";\n        } else if (item.title.startsWith(\"Show HN: \")) {\n          icon = \"eye\";\n        }\n      }\n      return icon;\n    }\n\n    render() {\n      if (this.props && this.props.item) {\n        let item = this.props.item;\n        let points = \" \" + this.props.score;\n        let comments = item.kids ? item.kids.length : 0;\n        let postDate = this.computeTimeString(item.time);\n        let shouldRenderComments = (this.props.openedStory === this.props.item.id);\n        let icon = this.computeIcon(item);\n        let state = item.url ? \"\" : \"disabled\";\n\n         return (<div>\n          <div className={`btn btn-outline-warning ${state}`}\n               onClick={() => {item.url && this.props.bookmarkAction(item)}} disabled={!item.url}>\n            <FontAwesomeIcon icon={icon} />\n          </div>\n          {points} points by {item.by} |\n          {postDate} | <span className=\"Comment\" onClick={() => {\n            this.props.changeOpenedStory(item.id);}}> {comments} comments\n          </span>\n          {shouldRenderComments && <CommentListComponent key={item.id}\n                                                         kids={item.kids}\n                                                         depth={ROOT_DEPTH}\n                                                         expanded={true}\n                                                         hideReplies={true}/>}\n         </div>);\n      } else {\n        return <div>No data available.</div>\n      }\n    }\n}\n\nexport default SummaryComponent;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nimport SummaryComponent from './SummaryComponent';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\n\nclass ItemComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            index: this.props.index,\n            searchTerm: this.props.searchTerm,\n        };\n    }\n\n    componentDidMount() {\n        ApiEndpoints.getNewsItem(\n            this.props.itemId,\n            response => this.setState({\n                    item: response\n                })\n        );\n    }\n\n    parseURL = (itemLink) => {\n        //  Create an anchor element (note: no need to append this element to the document)\n        let url = document.createElement('a');\n        //  Set href to any path\n        url.setAttribute('href', itemLink);\n        return url;\n    }\n\n    render() {\n        let item = this.state.item;\n        let itemTitle = \" \" + (item && item.title);\n        let itemLink = (item && item.url);\n        let score = item && item.score;\n        \n        let hostname = \"(\" + this.parseURL(itemLink).hostname + \")\";\n        let term = this.props.searchTerm && this.props.searchTerm.toLowerCase()\n        let shouldDisplay = (term && (\n            itemTitle.toLowerCase().includes(term) ||\n            (\"\" + itemLink).toLowerCase().includes(term) ||\n            ((item && item.author) || \"\").toLowerCase().includes(term)\n        )) || !term;\n        if (!shouldDisplay) {\n            return (null);\n        }\n        else {\n            let title = itemLink ? (<a href={itemLink}>{itemTitle}</a>) : itemTitle;\n            return (\n                <div>\n                    <Card border=\"light\" body>\n                    <div className=\"item\">{title} {itemLink && hostname}</div>\n                        <SummaryComponent item={item}\n                                          score={score}\n                                          changeOpenedStory={this.props.changeOpenedStory}\n                                          openedStory={this.props.openedStory}\n                                          bookmarkAction={this.props.bookmarkAction}/>\n                    </Card>\n                    <br/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ItemComponent;","import React from 'react';\n\nimport Spinner from 'react-bootstrap/Spinner';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\nimport ItemComponent from '../item/ItemComponent';\n\n\nclass ItemListComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            endpoint: this.props.endpoint,\n            items: null,\n            isLoading: false,\n            openedStory: 0,\n            bookmarks: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadItems();\n    }\n\n    loadItems = () => {\n        let endpoint = (this.state && this.state.endpoint) || \"beststories\";\n        let forceMakeRequest = true;\n        ApiEndpoints.getNewsItems(response => this.setState({\n            items: response\n        }), endpoint, forceMakeRequest\n        );\n    }\n\n    changeOpenedStory = (storyId) => {\n        let oldStoryId = this.state.openedStory;\n        if (!storyId || oldStoryId === storyId) {\n            this.setState({\n                openedStory: 0\n            }); // just close opened story\n            return\n        }\n        this.setState({\n            openedStory: storyId // new story opened\n        });\n    }\n\n    render() {\n        let newsItems = this.state.items;\n        if (!newsItems) {\n            newsItems = [];\n        }\n        const { version } = require('../../../package.json');\n        return (\n            <div>\n                <Navbar fixed=\"bottom\" bg=\"light\">\n                    <a href=\"https://github.com/mariaS210/skunkworks\"><FontAwesomeIcon icon={[\"fab\", \"github\"]}/>\n                {\" \"}version {version}</a>\n                </Navbar>\n            <div className=\"container\">\n                <InfiniteScroll\n                    dataLength={newsItems.length} //This is important field to render the next data\n                    next={this.loadItems}\n                    hasMore={true}\n                    loader={<Spinner animation=\"border\" variant=\"dark\" />}\n                    endMessage={\n                        <p style={{ textAlign: 'center' }}>\n                            <b>Yay! You have seen it all</b>\n                        </p>\n                    }>\n                    {newsItems.map((item, index) => (\n                        <ItemComponent key={index}\n                            index={index}\n                            itemId={item}\n                            searchTerm={this.props.searchTerm}\n                            changeOpenedStory={this.changeOpenedStory}\n                            openedStory={this.state.openedStory}\n                            bookmarkAction={this.props.bookmarkAction}/>\n                    ))}\n                </InfiniteScroll>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ItemListComponent;\n","import React from 'react';\nimport Toast from 'react-bootstrap/Toast';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass BookmarkListComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shown: Array(this.props.bookmarks.length).fill(true)\n        };\n    }\n\n    handleClose(index) {\n        let shown = this.state.shown.slice(0);\n        shown.splice(index, 1);\n        this.props.bookmarks.splice(index, 1);\n        this.setState({\n            shown: shown,\n        });\n    }\n\n    render() {\n        let bookmarks = this.props.bookmarks;\n        if (!bookmarks) {\n            return (null);\n        }\n        return (<div\n                style={{\n                position: 'absolute',\n                top: 70,\n                right: 0,\n                }}\n            >\n                {bookmarks && bookmarks.map((item, index) => (\n                <Toast key={index} show={this.state.shown[index]} onClose={()=>{this.handleClose(index)}}>\n                <Toast.Header>\n                    <FontAwesomeIcon icon=\"bookmark\" className=\"rounded mr-2\" />\n                    <span className=\"mr-auto\"><a href={item.url}>{item.title}</a></span>\n                </Toast.Header>\n                </Toast>))}\n        </div>);\n    }\n}\n\nexport default BookmarkListComponent;","import React from 'react';\n\n// React Bootrap Navigation bar\n// order matters.\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faFilter,\n  faBookmark,\n  faAngleDown,\n  faAngleUp,\n  faSuitcase,\n  faEye,\n  faQuestion,\n  faLink } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport './App.css';\nimport ItemListComponent from './components/list/ItemListComponent';\nimport BookmarkListComponent from './components/list/BookmarkListComponent';\n\n\nlibrary.add(\n  faFilter,\n  faBookmark,\n  faAngleDown,\n  faAngleUp,\n  faSuitcase,\n  faEye,\n  faQuestion,\n  faLink,\n  fab);\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      endpoint: \"topstories\",\n      bookmarks: [],\n    }\n  }\n\n  handleChange(event) {\n    this.setState({term: event.target.value})\n  }\n\n\n  bookmarkAction = (item) => {\n    if (item && item.url) {\n        let existingBookmarks = this.state.bookmarks;\n        if (! existingBookmarks.find((saved) => {return saved.url === item.url})) {\n            this.setState({\n                bookmarks: [...this.state.bookmarks, item],\n            });\n        }\n    }\n  }\n\n  render() {\n    let bookmarks = this.state.bookmarks;\n    return (\n      <Router className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand as={Link} to=\"/top\" className=\"btn btn-outline-warning\">\n          <FontAwesomeIcon icon={[\"fab\", \"hacker-news-square\"]}/> Hacker News\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/top\" className=\"nav-link\">Top</Link>\n            <Link to=\"/new\" className=\"nav-link\">New</Link>\n            <Link to=\"/best\" className=\"nav-link\">Best</Link>\n            <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item as={Link} to=\"/ask\">Ask</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/show\">Show</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/job\">Job</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n          <InputGroup className=\"mr-sm-2\">\n            <Button as={InputGroup.Prepend} variant=\"primary\"><FontAwesomeIcon icon=\"filter\" /></Button>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Filter\"              \n              value={this.state.term}\n              onChange={this.handleChange.bind(this)}\n              aria-describedby=\"filter\"\n            ></FormControl>\n          </InputGroup>\n          </Form>\n        </Navbar.Collapse>\n        {bookmarks && <BookmarkListComponent bookmarks={bookmarks}/>}\n        </Navbar>\n          <Switch>\n            <Route exact path=\"/top\"\n                   render={(props) => <ItemListComponent endpoint=\"topstories\" key=\"topstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/new\"\n                   render={(props) => <ItemListComponent endpoint=\"newstories\" key=\"newstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/best\"\n                   render={(props) => <ItemListComponent endpoint=\"beststories\" key=\"beststories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/ask\"\n                   render={(props) => <ItemListComponent endpoint=\"askstories\" key=\"askstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/show\"\n                   render={(props) => <ItemListComponent endpoint=\"showstories\" key=\"showstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n\n            <Route exact path=\"/job\"\n                   render={(props) => <ItemListComponent endpoint=\"jobstories\" key=\"jobstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/\"\n                   render={(props) => <ItemListComponent endpoint=\"topstories\"  key=\"home\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["utils/ApiEndpoints.js","components/item/UpvoteComponent.jsx","components/item/CommentComponent.jsx","components/item/SummaryComponent.jsx","components/item/ItemComponent.jsx","components/list/ItemListComponent.jsx","components/list/TopStoriesComponent.jsx","components/list/BestStoriesComponent.jsx","components/list/NewStoriesComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","cursor","newsItems","ApiEndpoints","itemId","callback","request","Request","concat","fetch","then","response","status","json","Error","catch","error","console","endpoint","arguments","length","undefined","result","slice","items","requests","forEach","push","Promise","all","map","responses","UpvoteComponent","react_default","a","createElement","className","onClick","this","props","upvoteAction","React","Component","CommentComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateComments","newComments","setState","comments","state","item","kids","getBulkNewsItems","index","comment","deleted","key","id","text","SummaryComponent","changeShowComments","oldShowComments","showComments","_this2","author","by","points","score","time","postDate","Date","timeDiff","Math","abs","now","timeUnit","shouldRenderComments","openedStory","floor","changeOpenedStory","item_CommentComponent","ItemComponent","buildScore","localScore","parseURL","itemLink","url","document","setAttribute","getNewsItem","itemNo","itemTitle","title","item_UpvoteComponent","href","hostname","item_SummaryComponent","ItemListComponent","loadItems","getNewsItems","storyId","oldStoryId","isLoading","lib_default","dataLength","next","hasMore","loader","endMessage","style","textAlign","item_ItemComponent","TopStoriesComponent","list_ItemListComponent","BestStoriesComponent","NewStoriesComponent","App","react_router_dom","Navbar","bg","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","to","Form","inline","FormControl","type","placeholder","Button","variant","react_router","exact","path","component","Boolean","window","location","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef4ff4fe.chunk.js","sourcesContent":["const BASE_URL = \"https://hacker-news.firebaseio.com\";\nlet cursor = 0;\nlet limitCounter = 30;\nlet newsItems = []\n\nclass ApiEndpoints {\n    static getNewsItem(itemId, callback) {\n        let request = new Request(`${BASE_URL}/v0/item/${itemId}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                callback && callback(response);\n            }).catch(error => {\n                console.error(error);\n            });\n    }\n\n    static getNewsItems(callback, endpoint=\"topstories\") {\n        if (newsItems.length > 0) {\n            cursor = cursor + limitCounter;\n            let result = newsItems.slice(0, cursor);\n            return callback(result);\n        }\n        let request = new Request(`${BASE_URL}/v0/${endpoint}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                newsItems = response;\n                cursor = cursor + limitCounter;\n                let result = response.slice(0, cursor);\n                callback && callback(result);\n            }).catch(error => {\n                console.error(error);\n            });\n        }\n\n    static getBulkNewsItems(items, callback) {\n        let requests = []\n        if (items && callback) {\n            items.forEach(itemId => {\n                requests.push(new Request(`${BASE_URL}/v0/item/${itemId}.json`));\n            });\n            Promise.all(requests.map(request =>\n                fetch(request).then(response => response.json())\n            )).then(responses => {\n                callback(responses);\n            });\n        }\n    }\n}\n\nexport default ApiEndpoints;","import React from 'react'\n\nclass UpvoteComponent extends React.Component {\n\n    render() {\n        return (\n            <div className=\"UpvoteURL\" onClick={this.props.upvoteAction}>▲</div>\n        )\n    }\n}\n\nexport default UpvoteComponent;","import React from 'react';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\nclass CommentComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: []\n        }\n    }\n\n    updateComments = (newComments) => {\n        this.setState({\n            comments: newComments\n        });\n    }\n\n    componentDidMount() {\n        let item = this.props.item;\n        let kids = item && item.kids;\n        ApiEndpoints.getBulkNewsItems(kids, this.updateComments);\n    }\n\n    render() {\n        let comments = this.state.comments;\n        let index = 1;\n        if (comments.length > 0) {\n            return (\n                <div>\n                    Comments\n                    {comments.map(function(comment) {\n                        if (!comment.deleted) {\n                            return <p key={comment.id}>{index++}. {comment.text}</p>;\n                        } else {\n                            return <div><i>Deleted.</i></div>\n                        }\n                    })}\n                </div>\n            );\n        } else {\n            return <div><i>No comments.</i></div>;\n        }\n    }\n\n}\n\nexport default CommentComponent;","import React from 'react';\nimport CommentComponent from './CommentComponent';\n\n\nclass SummaryComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        showComments: false\n      };\n    }\n\n    changeShowComments = () => {\n        let oldShowComments = this.state.showComments;\n        this.setState({\n          showComments: !oldShowComments \n        });\n    }\n\n    render() {\n      if (this.props && this.props.item) {\n        let author = this.props.item.by;\n        let points = this.props.score;\n        let time = this.props.item.time;\n        let comments = this.props.item.kids ? this.props.item.kids.length : 0;\n        let postDate = new Date(time * 1000);\n        let timeDiff = Math.abs(Date.now() - postDate) / 36e5; // in hours\n        let timeUnit = \"hours\"\n        if (timeDiff > 24) {\n          timeUnit = \"days\";\n          timeDiff /=24;\n        }\n        let shouldRenderComments = (this.props.openedStory === this.props.item.id)//this.state.showComments;\n\n         return (<div>\n          {points} points by {author} |\n          {Math.floor(timeDiff)} {timeUnit} ago |\n          <span className=\"Comment\" onClick={() => {\n            this.props.changeOpenedStory(this.props.item.id);}}>{comments} comments</span>\n          {shouldRenderComments && <CommentComponent key={this.props.item.id} item={this.props.item}/>}\n         </div>);\n      } else {\n        return <div>No data available.</div>\n      }\n    }\n}\n\nexport default SummaryComponent;","import React from 'react';\nimport UpvoteComponent from './UpvoteComponent'\nimport SummaryComponent from './SummaryComponent';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\n\nclass ItemComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            index: this.props.index,\n            score: 0\n        };\n    }\n\n    upvoteAction = () => {\n        let score = this.state && this.state.score;\n        this.setState({\n            score: score + 1\n        });\n    }\n\n    componentDidMount() {\n        ApiEndpoints.getNewsItem(\n            this.props.itemId,\n            response => this.setState({\n                    item: response\n                })\n        );\n    }\n\n    buildScore = () => {\n        let localScore = this.state && this.state.score;\n        let hckrScore = this.state.item && this.state.item.score;\n        let score = hckrScore + localScore;\n        return score;\n    }\n\n    parseURL = (itemLink) => {\n        //  Create an anchor element (note: no need to append this element to the document)\n        let url = document.createElement('a');\n        //  Set href to any path\n        url.setAttribute('href', itemLink);\n        return url;\n    }\n\n    render() {\n        let item = this.state.item;\n        let itemNo = this.state.index;\n        let itemTitle = \" \" + (item && item.title);\n        let itemLink = item && item.url;\n        let score = this.buildScore();\n        \n        let url = this.parseURL(itemLink);\n\n        return (\n            <div className=\"item\">\n                {itemNo}. <UpvoteComponent upvoteAction={this.upvoteAction}/>\n                <a href={itemLink}>{itemTitle}</a> ({url.hostname})\n                <SummaryComponent item={item}\n                                  score={score}\n                                  changeOpenedStory={this.props.changeOpenedStory}\n                                  openedStory={this.props.openedStory}/>\n            </div>\n        )\n    }\n}\n\nexport default ItemComponent;","import React from 'react';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\nimport ItemComponent from '../item/ItemComponent';\n\n\nclass ItemListComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            items: null,\n            isLoading: false,\n            openedStory: 0\n        };\n    }\n\n    componentDidMount() {\n        this.loadItems();\n    }\n\n    loadItems = () => {\n        let endpoint = (this.props && this.props.endpoint) || \"topstories\";\n        ApiEndpoints.getNewsItems(response => this.setState({\n            items: response\n        }), endpoint\n        );\n    }\n\n    changeOpenedStory = (storyId) => {\n        let oldStoryId = this.state.openedStory;\n        if (!storyId || oldStoryId === storyId) {\n            this.setState({\n                openedStory: 0\n            }); // just close opened story\n            return\n        }\n        this.setState({\n            openedStory: storyId // new story opened\n        });\n    }\n\n    render() {\n        let newsItems = this.state.items;\n        if (!newsItems) {\n            newsItems = [];\n        }\n\n        return (\n            <div className=\"container\">\n                <InfiniteScroll\n                    dataLength={newsItems.length} //This is important field to render the next data\n                    next={this.loadItems}\n                    hasMore={true}\n                    loader={<h4>Loading...</h4>}\n                    endMessage={\n                        <p style={{ textAlign: 'center' }}>\n                            <b>Yay! You have seen it all</b>\n                        </p>\n                    }>\n                    {newsItems.map((item, index) => (\n                        <ItemComponent key={index}\n                            index={index}\n                            itemId={item}\n                            changeOpenedStory={this.changeOpenedStory}\n                            openedStory={this.state.openedStory} />\n                    ))}\n                </InfiniteScroll>\n            </div>\n        )\n    }\n}\n\nexport default ItemListComponent;\n","import React from 'react';\nimport ItemListComponent from './ItemListComponent';\n\nclass TopStoriesComponent extends React.Component {\n    render() {\n        return <ItemListComponent endpoint=\"topstories\" />;\n    }\n}\n\nexport default TopStoriesComponent;","import React from 'react';\nimport ItemListComponent from './ItemListComponent';\n\n\nclass BestStoriesComponent extends React.Component {\n    render() {\n        return <ItemListComponent endpoint=\"beststories\" />\n    }\n}\nexport default BestStoriesComponent;","import React from 'react';\nimport ItemListComponent from './ItemListComponent';\n\nclass NewStoriesComponent extends React.Component {\n    render() {\n        return <ItemListComponent endpoint=\"newstories\" />;\n    }\n}\nexport default NewStoriesComponent;","import React from 'react';\n\n// React Bootrap Navigation bar\n// order matters.\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport TopStoriesComponent from './components/list/TopStoriesComponent';\nimport BestStoriesComponent from './components/list/BestStoriesComponent';\nimport NewStoriesComponent from './components/list/NewStoriesComponent';\n\nfunction App() {\n  return (\n    <Router className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand href=\"#home\">HackerNews</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link to=\"/top\" className=\"nav-link\">Top</Link>\n          <Link to=\"/new\" className=\"nav-link\">New</Link>\n          <Link to=\"/best\" className=\"nav-link\">Best</Link>\n        </Nav>\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">Search</Button>\n        </Form>\n      </Navbar.Collapse>\n      </Navbar>\n        <Switch>\n          <Route exact path=\"/top\"  component={TopStoriesComponent} />\n          <Route exact path=\"/new\"  component={NewStoriesComponent} />\n          <Route exact path=\"/best\" component={BestStoriesComponent} />\n          <Route exact path=\"/\"     component={TopStoriesComponent} />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["utils/ApiEndpoints.js","utils/helpers.js","components/list/CommentListComponent.jsx","components/item/CommentComponent.jsx","components/item/SummaryComponent.jsx","components/item/ItemComponent.jsx","components/list/ItemListComponent.jsx","components/list/BookmarkListComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","cursor","newsItems","ApiEndpoints","itemId","callback","request","Request","concat","fetch","then","response","status","json","Error","catch","error","console","endpoint","arguments","length","undefined","forceMakeRequest","result","slice","items","requests","forEach","push","Promise","all","map","responses","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","CommentListComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","updateExpanded","oldExpanded","state","expanded","setState","replies","updateReplies","newReplies","fetchReplies","getBulkNewsItems","kids","_this2","react_default","a","createElement","className","depth","icon","onClick","index_es","ListGroup","variant","comment","deleted","key","id","Item","text","React","Component","CommentComponent","updateComments","newComments","comments","item","list_CommentListComponent","SummaryComponent","changeShowComments","oldShowComments","showComments","itemLink","url","author","by","points","score","time","postDate","Date","timeDiff","Math","abs","now","timeUnit","shouldRenderComments","openedStory","bookmarkAction","floor","changeOpenedStory","item_CommentComponent","ItemComponent","parseURL","document","setAttribute","index","searchTerm","getNewsItem","itemTitle","title","hostname","term","toLowerCase","includes","href","Card","border","body","item_SummaryComponent","ItemListComponent","loadItems","getNewsItems","storyId","oldStoryId","isLoading","bookmarks","lib_default","dataLength","next","hasMore","loader","endMessage","style","textAlign","item_ItemComponent","BookmarkListComponent","shown","Array","fill","splice","position","top","right","Toast","show","onClose","handleClose","Header","library","add","faFilter","faBookmark","faAngleDown","faAngleUp","fab","App","find","saved","toConsumableArray","event","target","value","react_router_dom","Navbar","bg","expand","sticky","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Form","inline","InputGroup","Button","Prepend","FormControl","type","placeholder","onChange","handleChange","bind","aria-describedby","list_BookmarkListComponent","react_router","exact","path","render","list_ItemListComponent","Boolean","window","location","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dad3f906.chunk.js","sourcesContent":["const BASE_URL = \"https://hacker-news.firebaseio.com\";\nlet cursor = 0;\nlet limitCounter = 30;\nlet newsItems = []\n\n\nclass ApiEndpoints {\n    static getNewsItem(itemId, callback) {\n        let request = new Request(`${BASE_URL}/v0/item/${itemId}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                callback && callback(response);\n            }).catch(error => {\n                console.error(error);\n            });\n    }\n\n    static getNewsItems(callback, endpoint=\"topstories\", forceMakeRequest=false) {\n        if (newsItems.length > 0 && !forceMakeRequest) {\n            cursor = cursor + limitCounter;\n            let result = newsItems.slice(0, cursor);\n            return callback(result);\n        }\n        let request = new Request(`${BASE_URL}/v0/${endpoint}.json`);\n        fetch(request)\n            .then(response => {\n                if (response.status === 200) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong on api server!');\n                }\n            })\n            .then(response => {\n                newsItems = response;\n                cursor = cursor + limitCounter;\n                let result = response.slice(0, cursor);\n                callback && callback(result);\n            }).catch(error => {\n                console.error(error);\n            });\n        }\n\n    static getBulkNewsItems(items, callback) {\n        let requests = []\n        if (items && callback) {\n            items.forEach(itemId => {\n                requests.push(new Request(`${BASE_URL}/v0/item/${itemId}.json`));\n            });\n            Promise.all(requests.map(request =>\n                fetch(request).then(response => response.json())\n            )).then(responses => {\n                callback(responses);\n            });\n        }\n    }\n}\n\nexport default ApiEndpoints;","\nfunction htmlDecode(input)\n{\n    var doc = new DOMParser().parseFromString(input, \"text/html\");\n    return doc.documentElement.textContent;\n}\nexport default htmlDecode;","import React from 'react';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ApiEndpoints from '../../utils/ApiEndpoints';\nimport htmlDecode from '../../utils/helpers';\n\nconst MAX_COMMENT_DEPTH = 5;\n\nclass CommentListComponent extends React.Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: false,\n            replies: []\n        }\n    }\n\n    updateExpanded = () => {\n        let oldExpanded = this.state.expanded;\n        if (this._isMounted) {\n            this.setState({\n                expanded: !oldExpanded,\n                replies: !oldExpanded ? this.state.replies : []\n            });\n        }\n    }\n\n    updateReplies = (newReplies) => {\n        if (this._isMounted) {\n            this.setState({\n                replies: newReplies\n            })\n        }\n    }\n\n    fetchReplies = () => {\n        ApiEndpoints.getBulkNewsItems(this.props.kids, this.updateReplies);\n    }\n    \n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        // quick no displays\n        // 1. no replies\n        let haveReplies = !!(this.props.kids && this.props.kids.length);\n        if (!haveReplies) {\n            return <div className=\"Comment\"><i>no replies</i></div>\n        }\n        // 2. maximum depth reached\n        let depth = (this.props.depth || 0) + 1;\n        if (depth > MAX_COMMENT_DEPTH) {\n            return <div className=\"Comment\"><i>Continue this thread...</i></div>\n        }\n\n        let expanded = this.state.expanded;\n        let icon = expanded ? \"angle-up\" : \"angle-down\";\n        let replies = this.state.replies;\n        return (\n            <div>\n            <i className=\"Comment\" onClick={()=>{this.updateExpanded()}}>\n                <FontAwesomeIcon icon={icon} />\n                {this.props.kids.length} replies\n            </i>\n            {expanded && this.fetchReplies()}\n            {expanded && <ListGroup variant=\"flush\">\n                    {replies.map((comment) => {\n                        if (!comment.deleted) {\n                            return (<ListGroup.Item key={\"itm-\" + comment.id}>\n                                    <div key={comment.id}>{htmlDecode(comment.text)}</div>\n                                    <CommentListComponent kids={comment.kids} depth={depth}/>\n                                </ListGroup.Item>);\n                        } else {\n                            return <div key={comment.id}><i>Deleted.</i></div>\n                        }\n                    })}\n                </ListGroup>\n            }\n            </div>\n        );\n    }\n}\nexport default CommentListComponent;","import React from 'react';\n\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\nimport htmlDecode from '../../utils/helpers';\nimport CommentListComponent from '../list/CommentListComponent';\n\n\n\nclass CommentComponent extends React.Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: [],\n            kids: [],\n            expanded: false,\n        }\n    }\n\n    updateComments = (newComments) => {\n        if (this._isMounted) {\n            this.setState({\n                comments: newComments\n            });\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        let item = this.props.item;\n        let kids = item && item.kids;\n        ApiEndpoints.getBulkNewsItems(kids, this.updateComments);\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        let comments = this.state.comments;\n        let depth = (this.props.depth || 0) + 1;\n        if (comments.length > 0) {\n            return (\n                <ListGroup variant=\"flush\">\n                    {comments.map((comment) => {\n                        if (!comment.deleted) {\n                            return (<ListGroup.Item key={\"itm-\" + comment.id}>\n                                    <div key={comment.id}>{htmlDecode(comment.text)}</div>\n                                    <CommentListComponent kids={comment.kids} depth={depth}/>\n                                </ListGroup.Item>);\n                        } else {\n                            return <div key={comment.id}><i>Deleted.</i></div>\n                        }\n                    })}\n                </ListGroup>\n            );\n        } else {\n            return <div><i>Stand by.</i></div>;\n        }\n    }\n\n}\n\nexport default CommentComponent;","import React from 'react';\nimport CommentComponent from './CommentComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass SummaryComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        showComments: false\n      };\n    }\n\n    changeShowComments = () => {\n        let oldShowComments = this.state.showComments;\n        this.setState({\n          showComments: !oldShowComments \n        });\n    }\n\n    render() {\n      if (this.props && this.props.item) {\n        let itemLink = this.props.item.url;\n        let author = this.props.item.by;\n        let points = \" \" + this.props.score;\n        let time = this.props.item.time;\n        let comments = this.props.item.kids ? this.props.item.kids.length : 0;\n        let postDate = new Date(time * 1000);\n        let timeDiff = Math.abs(Date.now() - postDate) / 36e5; // in hours\n        let timeUnit = \"hours\";\n        if (timeDiff > 24) {\n          timeUnit = \"days\";\n          timeDiff /=24;\n        }\n        let shouldRenderComments = (this.props.openedStory === this.props.item.id);\n\n         return (<div>\n          {itemLink && <div className=\"btn btn-outline-warning\" onClick={() => {this.props.bookmarkAction(this.props.item)}}>\n            <FontAwesomeIcon icon=\"bookmark\" />\n            </div>}\n          {points} points by {author} |\n          {Math.floor(timeDiff)} {timeUnit} ago |\n          <span className=\"Comment\" onClick={() => {\n            this.props.changeOpenedStory(this.props.item.id);}}>{comments} comments</span>\n          {shouldRenderComments && <CommentComponent key={this.props.item.id} item={this.props.item}/>}\n         </div>);\n      } else {\n        return <div>No data available.</div>\n      }\n    }\n}\n\nexport default SummaryComponent;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nimport SummaryComponent from './SummaryComponent';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\n\n\nclass ItemComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: null,\n            index: this.props.index,\n            searchTerm: this.props.searchTerm,\n        };\n    }\n\n    componentDidMount() {\n        ApiEndpoints.getNewsItem(\n            this.props.itemId,\n            response => this.setState({\n                    item: response\n                })\n        );\n    }\n\n    parseURL = (itemLink) => {\n        //  Create an anchor element (note: no need to append this element to the document)\n        let url = document.createElement('a');\n        //  Set href to any path\n        url.setAttribute('href', itemLink);\n        return url;\n    }\n\n    render() {\n        let item = this.state.item;\n        let itemTitle = \" \" + (item && item.title);\n        let itemLink = (item && item.url);\n        let score = item && item.score;\n        \n        let hostname = \"(\" + this.parseURL(itemLink).hostname + \")\";\n        let term = this.props.searchTerm && this.props.searchTerm.toLowerCase()\n        let shouldDisplay = (term && (\n            itemTitle.toLowerCase().includes(term) ||\n            (\"\" + itemLink).toLowerCase().includes(term) ||\n            ((item && item.author) || \"\").toLowerCase().includes(term)\n        )) || !term;\n        if (!shouldDisplay) {\n            return (null);\n        }\n        else {\n            let title = itemLink ? (<a href={itemLink}>{itemTitle}</a>) : itemTitle;\n            return (\n                <div>\n                    <Card border=\"light\" body>\n            <div className=\"item\">{title} {itemLink && hostname}</div>\n                        <SummaryComponent item={item}\n                                          score={score}\n                                          changeOpenedStory={this.props.changeOpenedStory}\n                                          openedStory={this.props.openedStory}\n                                          bookmarkAction={this.props.bookmarkAction}/>\n                    </Card>\n                    <br/>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ItemComponent;","import React from 'react';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport ApiEndpoints from '../../utils/ApiEndpoints';\nimport ItemComponent from '../item/ItemComponent';\n\n\nclass ItemListComponent extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            endpoint: this.props.endpoint,\n            items: null,\n            isLoading: false,\n            openedStory: 0,\n            bookmarks: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadItems();\n    }\n\n    loadItems = () => {\n        let endpoint = (this.state && this.state.endpoint) || \"beststories\";\n        let forceMakeRequest = true;\n        ApiEndpoints.getNewsItems(response => this.setState({\n            items: response\n        }), endpoint, forceMakeRequest\n        );\n    }\n\n    changeOpenedStory = (storyId) => {\n        let oldStoryId = this.state.openedStory;\n        if (!storyId || oldStoryId === storyId) {\n            this.setState({\n                openedStory: 0\n            }); // just close opened story\n            return\n        }\n        this.setState({\n            openedStory: storyId // new story opened\n        });\n    }\n\n    render() {\n        let newsItems = this.state.items;\n        if (!newsItems) {\n            newsItems = [];\n        }\n\n        return (\n            <div className=\"container\">\n                <InfiniteScroll\n                    dataLength={newsItems.length} //This is important field to render the next data\n                    next={this.loadItems}\n                    hasMore={true}\n                    loader={<h4>Loading...</h4>}\n                    endMessage={\n                        <p style={{ textAlign: 'center' }}>\n                            <b>Yay! You have seen it all</b>\n                        </p>\n                    }>\n                    {newsItems.map((item, index) => (\n                        <ItemComponent key={index}\n                            index={index}\n                            itemId={item}\n                            searchTerm={this.props.searchTerm}\n                            changeOpenedStory={this.changeOpenedStory}\n                            openedStory={this.state.openedStory}\n                            bookmarkAction={this.props.bookmarkAction}/>\n                    ))}\n                </InfiniteScroll>\n            </div>\n        )\n    }\n}\n\nexport default ItemListComponent;\n","import React from 'react';\nimport Toast from 'react-bootstrap/Toast';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass BookmarkListComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shown: Array(this.props.bookmarks.length).fill(true)\n        };\n    }\n\n    handleClose(index) {\n        let shown = this.state.shown.slice(0);\n        shown.splice(index, 1);\n        this.props.bookmarks.splice(index, 1);\n        this.setState({\n            shown: shown,\n        });\n    }\n\n    render() {\n        let bookmarks = this.props.bookmarks;\n        if (!bookmarks) {\n            return (null);\n        }\n        return (<div\n                style={{\n                position: 'absolute',\n                top: 70,\n                right: 0,\n                }}\n            >\n                {bookmarks && bookmarks.map((item, index) => (\n                <Toast key={index} show={this.state.shown[index]} onClose={()=>{this.handleClose(index)}}>\n                <Toast.Header>\n                    <FontAwesomeIcon icon=\"bookmark\" className=\"rounded mr-2\" />\n                    <span className=\"mr-auto\"><a href={item.url}>{item.title}</a></span>\n                </Toast.Header>\n                </Toast>))}\n        </div>);\n    }\n}\n\nexport default BookmarkListComponent;","import React from 'react';\n\n// React Bootrap Navigation bar\n// order matters.\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter, faBookmark, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport './App.css';\nimport ItemListComponent from './components/list/ItemListComponent';\nimport BookmarkListComponent from './components/list/BookmarkListComponent';\n\n\nlibrary.add(faFilter, faBookmark, faAngleDown, faAngleUp, fab);\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      endpoint: \"topstories\",\n      bookmarks: [],\n    }\n  }\n\n  handleChange(event) {\n    this.setState({term: event.target.value})\n  }\n\n\n  bookmarkAction = (item) => {\n    if (item && item.url) {\n        let existingBookmarks = this.state.bookmarks;\n        if (! existingBookmarks.find((saved) => {return saved.url === item.url})) {\n            this.setState({\n                bookmarks: [...this.state.bookmarks, item],\n            });\n        }\n    }\n  }\n\n  render() {\n    let bookmarks = this.state.bookmarks;\n    return (\n      <Router className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand as={Link} to=\"/top\" className=\"btn btn-outline-warning\">\n          <FontAwesomeIcon icon={[\"fab\", \"hacker-news-square\"]}/> Hacker News\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link to=\"/top\" className=\"nav-link\">Top</Link>\n            <Link to=\"/new\" className=\"nav-link\">New</Link>\n            <Link to=\"/best\" className=\"nav-link\">Best</Link>\n            <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item as={Link} to=\"/ask\">Ask</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/show\">Show</NavDropdown.Item>\n              <NavDropdown.Item as={Link} to=\"/job\">Job</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n          <InputGroup className=\"mr-sm-2\">\n            <Button as={InputGroup.Prepend} variant=\"primary\"><FontAwesomeIcon icon=\"filter\" /></Button>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Filter\"              \n              value={this.state.term}\n              onChange={this.handleChange.bind(this)}\n              aria-describedby=\"filter\"\n            ></FormControl>\n          </InputGroup>\n          </Form>\n        </Navbar.Collapse>\n        {bookmarks && <BookmarkListComponent bookmarks={bookmarks}/>}\n        </Navbar>\n          <Switch>\n            <Route exact path=\"/top\"\n                   render={(props) => <ItemListComponent endpoint=\"topstories\" key=\"topstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/new\"\n                   render={(props) => <ItemListComponent endpoint=\"newstories\" key=\"newstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/best\"\n                   render={(props) => <ItemListComponent endpoint=\"beststories\" key=\"beststories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/ask\"\n                   render={(props) => <ItemListComponent endpoint=\"askstories\" key=\"askstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/show\"\n                   render={(props) => <ItemListComponent endpoint=\"showstories\" key=\"showstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n\n            <Route exact path=\"/job\"\n                   render={(props) => <ItemListComponent endpoint=\"jobstories\" key=\"jobstories\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n            <Route exact path=\"/\"\n                   render={(props) => <ItemListComponent endpoint=\"topstories\"  key=\"home\"\n                                                         searchTerm={this.state.term}\n                                                         bookmarkAction={this.bookmarkAction}/>} />\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}